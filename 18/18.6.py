'''Работа за преподавателем'''
# Task 1

# details_num = 500000000
# price = 23.8589578
# increase = 0.045678
#
# print('На складе {} деталей'.format(details_num))
# print('На складе {:d} деталей'.format(details_num))
# print('На складе {:,d} деталей'.format(details_num))
# print('На складе {:.0e} деталей'.format(details_num))
# print('Каждая деталь стоит {:.2f} рублей'.format(price))
# print('Цена увеличилась на {:%}'.format(increase))
# print('Цена увеличилась на {:.1%}'.format(increase))

# Home Work
# 1 ==========================================================================
'''Задача 1. Меню ресторана
Один ресторан заказал вам написать приложение, которое в один клик отображало бы 
пользователю доступное меню в удобном виде. Для этого ресторан любезно предоставил 
свой сайт, откуда можно получить актуальную информацию о меню в виде идущих подряд названий.
Напишите программу, которая выводит это меню на экран. На вход подаётся строка из названий 
блюд, разделённые символом “;”, а на выходе эти названия перечисляются через запятую и пробел.

Пример:
Доступное меню: утиное филе;фланк-стейк;банановый пирог;плов

На данный момент в меню есть: утиное филе, фланк-стейк, банановый пирог, плов.
'''
# Пропустил
# 2 ==========================================================================
'''Задача 2. Самое длинное слово
Дана строка, содержащая пробелы. Найдите в ней самое длинное слово, выведите  это слово 
и его длину. Если таких слов несколько, выведите первое из них.
'''
# Пропустил
# 3 ==========================================================================
'''Задача 3. Файлы
В одной IT-компании существует негласный закон об именовании текстовых документов:
Название файла не должно начинаться на один из специальных символов: @№$%^&*()
Файл заканчивается расширением “.txt” или “.docx”

Напишите программу, которая получает на вход полное название файла и проверяет его по 
этим правилам.

Пример 1:
Название файла: @example.txt
Ошибка: название начинается на один из специальных символов

Пример 2:
Название файла: example.ttx
Ошибка: неверное расширение файла. Ожидалось .txt или .docx

Пример 3:
Название файла: example.txt
Файл назван верно.
'''
# Пропустил
# 4 ==========================================================================
'''Задача 4. Заглавные буквы
Пользователь вводит строку. Напишите программу, которая изменяет регистр символов в 
этой строке так, чтобы первая буква каждого слова была заглавной, а остальные буквы - строчными.

Пример:
Введите строку: Кажется, я забыл выключить утюг
Результат: Кажется, Я Забыл Выключить Утюг
'''
# Пропустил
# 5 ==========================================================================
'''Задача 5. Капитан Флинт
Капитан Флинт зарыл клад на Острове сокровищ. Он оставил описание, как найти клад. 
Описание состоит из строк вида: "North 5", где  слово – одно из "North", "South", "East", 
"West", – задает направление движения, а  число – количество шагов, которое необходимо 
пройти в этом направлении.
Напишите программу, которая по описанию пути к кладу определяет точные координаты клада, 
считая, что начало координат находится в начале пути, ось OX направлена на восток, 
ось OY – на север.

Пример:
По оси OY: South 19
По оси OX: East 2

Координаты: 2 -19
'''
# Пропустил
# 6 ==========================================================================
'''Задача 6. Пароль
При регистрации на сайте помимо логина нужно ещё придумать надёжный пароль. Этот пароль 
должен состоять минимум из 8 символов, в нём должна быть хотя бы одна большая буква и хотя 
бы 3 цифры. Тогда он будет считаться надёжным. 
Напишите программу, которая запрашивает у пользователя пароль до тех пор, пока он не введёт 
надежный пароль. Буквы используются из латинского алфавита.

Пример:
Придумайте пароль: qwerty
Пароль ненадёжный. Попробуйте ещё раз.
Придумайте пароль: qwerty12
Пароль ненадёжный. Попробуйте ещё раз.
Придумайте пароль: qwerty123
Пароль ненадёжный. Попробуйте ещё раз.
Придумайте пароль: qWErty123
Это надёжный пароль!
'''
# Пропустил
# 7 ==========================================================================
'''Задача 7. Цифры в строке
Пользователь вводит строку, которая, возможно, содержит пробелы. Напишите программу, которая 
извлекает из этой строки все символы, являющиеся цифрами и составляет из них новую строку.
Пример:
Введите строку: пр6и89вет
Цифры: 689
'''
# string = input('Введите строку: ')
# result = ''.join([sym for sym in string if sym.isdigit()])
# print(result)
# 8 ==========================================================================
'''Задача 8. Сжатие
С увеличением объема данных возникла потребность в сжатии этих данных, при этом не потеряв 
важную информацию. Для этого было придумано кодирование, которое осуществляется следующим образом:
s = 'aaaabbсaa' преобразуется в 'a4b2с1a2', то есть группы одинаковых символов исходной 
строки заменяются на этот символ и количество его повторений в этой позиции строки.
Напишите программу, которая считывает строку, кодирует её предложенным алгоритмом и
выводит закодированную последовательность на экран. Кодирование должно учитывать регистр символов.
Пример:
Введите строку: aaAAbbсaaaA
Закодированная строка: a2A2b2с1a3A1
'''
# string = input('Введите строку: ')
# # string = 'aaAAbbсaaaA'
# string = list(string)
# result = []
#
# for index in range(0, len(string)):
#     A = string[index]
#     result.append(string[index])
#     if index != len(string)-1 and string[index] != string[index + 1]:
#         result.append('.')
# result = ''.join(result).split('.')
# for i_index in range(0, len(result)):
#     result[i_index] = result[i_index][0] + str(result[i_index].count(result[i_index][0]))
#
# print('Закодированная строка: ', ''.join(result))
# 9 ==========================================================================
'''Задача 9. IP - адрес 2
При написании клиент-серверного приложения часто приходится работать с теми самыми IP-адресами. 
Как мы уже знаем, IP-адрес состоит из четырех целых чисел в диапазоне от 0 до 255, разделенных 
точками.
Пользователь вводит строку. Напишите программу, которая определяет, является ли заданная строка 
правильным IP-адресом. Обеспечьте контроль ввода, где предусматривается ввод целых чисел 
от 0 до 255, а также точки между ними.
Пример 1:
Введите IP: 128.16.35.a4
a4 - не целое число

Пример 2:
Введите IP: 240.127.56.340
340 превышает 255

Пример 3:
Введите IP: 34.56.42,5
Адрес - это четыре числа, разделенные точками

Пример 4:
Введите IP: 128.0.0.255
IP-адрес корректен
'''
# IP_adress = input('Введите IP: ')
# status = True
#
# if IP_adress.count('.') < 3:
#     print('Адрес - это четыре числа, разделенные точками.')
# else:
#     parts_IP = IP_adress.split('.')
#     for i_part in parts_IP:
#         if not i_part.isdigit():
#             print(f'{i_part} - не целое число')
#             status = False
#             break
#         elif int(i_part) > 255 or int(i_part) < 0:
#             print(f'{i_part} - превышает 255 либо меньше 0')
#             status = False
#             break
#     if status:
#         print('IP-адрес корректен')
# 10 ==========================================================================
'''Задача 10. Математика (сделайте по желанию)
Строка состоит из целых чисел, принимающих значения от 0 до 109, разделенных знаками 
операций “+”, “-” и “*”. Вычислите значение этого выражения, выполняя действия по правилам 
арифметики.

Пример:
Выражение: (5+4)*2-10

Ответ: 8
'''
expression = input('Выражение: ')
print(eval(expression))

