# Home Work
# 1 ==========================================================================
'''Задача 1. Тестовое задание
Степан пришёл устраиваться на работу, где ему дали тестовое задание: проанализировать такую
таблицу, понять как она строится и написать программу для вывода её на экран.
0	2	4	6	8	10
1	3	5	7	9	11
2	4	6	8	10	12
3	5	7	9	11	13
4	6	8	10	12	14
5	7	9	11	13	15
Помогите Степану реализовать такую программу. Подсказка: номера столбцов. А ещё не забудьте
про литерал \t для табуляции.
'''
# for row in range(6):
#     for col in range(0, 12, 2):
#         print(col+row, end = '\t')
#     print()
# 2 ==========================================================================
'''Задача 2. Лестница
Пользователь вводит число N. Напишите программу, которая выводит такую “лесенку” из чисел:
Введите число N: 5
1     
2 2    
3 3 3   
4 4 4 4  
5 5 5 5 5 
'''
# N = int(input('Введите число N: '))
# for row in range(1, N + 1):
#     for col in range(1, N + 1):
#         if row == col:
#             print(row, end=' ')
#         elif col < row:
#             print(row, end=' ')
#         else:
#             print(end=' ')
#     print()
# 3 ==========================================================================
'''Задача 3. Координатные оси 2
Модифицируйте пример с координатными осями так, чтобы в точке их пересечения рисовался знак “+”, на 
верхнем конце вертикальной оси была стрелка вверх “^”, а на правом конце горизонтальной оси стрелка 
вправо “>”. Это сделает рисунок более красивым и точным.
                        ^                         
                        |                         
                        |                         
                        |                         
                        |                         
                        |                         
                        |                         
                        |                         
                        |                         
------------------------+------------------------>
                        |                         
                        |                         
                        |                         
                        |                         
                        |                         
                        |                         
                        |                         
                        |                         
                        |                         
                        | 
'''
# for row in range(1, 21):
#     for col in range(1, 51):
#         if col == 50/2:
#             if row == 1:
#                 print('^', end = '')
#             elif row == 20/2:
#                 print('+', end = '')
#             else:
#                 print('|', end = '')
#         elif row == 20/2:
#             if col == 50:
#                 print('>', end = '')
#             else:
#                 print('-', end = '')
#         else:
#             print(' ', end = '')
#     print()
# 4 ==========================================================================
'''Задача 4. Рамка
Напишите программу, которая рисует с помощью символьной графики прямоугольную рамку. Для 
вертикальных линий используйте символ вертикального штриха “|”, а для горизонтальных - 
дефис “-”. Пусть пользователь вводит ширину и высоту рамки.
Введите ширину рамки в символах: 20
Введите высоту рамки в символах: 5
|-------------------|
|                   |
|                   |
|                   |
|                   |
|-------------------|
'''
# width = int(input('Введите ширину рамки в символах: '))     # width - ширина
# height = int(input('Введите высоту рамки в символах: '))    # height - высота
# for row in range(height + 1):
#     for col in range(width + 1):
#         if col == 0 or col == width:
#             print('|', end = '')
#         elif row == 0 or row == height:
#             print('-', end = '')
#         else:
#             print(' ', end = '')
#     print()
# 5 ==========================================================================
'''Задача 5. Крест
Напишите программу, которая выводит на экран крест из символов “^”.
(Символы выводятся по диагоналям воображаемого квадрата.)
Введите число N: 5
^    ^
 ^  ^ 
  ^^  
  ^^  
 ^  ^ 
^    ^
'''
# N = int(input('Введите число N: '))
# for row in range(N + 1):
#     for col in range(N + 1):
#         if row == col or col == - row + N:
#             print('^', end = '')
#         else:
#             print(' ', end = '')
#     print()
# 6 ==========================================================================
'''Задача 6. Простые числа
Напишите программу, которая считает количество простых чисел в заданной последовательности и 
выводит ответ на экран.
'''
# N = int(input('Введите количество чисел последовательности: '))
# count = 0
# for number in range(N):
#     isPrime = True
#     while True:
#         num = int(input(f'Введите {number + 1}-е число последовательности: '))
#         if num < 2:
#             print(f'Число последовательности не должно быть равно 1! Попробуйте еще раз...')
#         else:
#             break
#     for devider in range(2, num):
#         if num % devider == 0:
#             isPrime = False
#     if isPrime:
#         count += 1
# print('Количество простых чисел в заданной последовательности равно: ', count)
# 7 ==========================================================================
'''Задача 7. Тестовое задание 2
После успешного первого задания Степан уже было обрадовался, что ему наконец можно будет работать 
программистом в хорошей компании. Но всё оказалось не так просто: ему дали ещё одно задание на вывод 
матрицы. Вот бы и правда на работу принимали после одного вопроса...
Напишите программу, которая запрашивает у пользователя размер квадратной матрицы и выводит её на 
экран по следующему принципу: по двум диагоналям идут единицы, сверху от пересечения - нули, со всех 
остальных сторон - двойки
Пример:
Введите размер матрицы: 5
1 0 0 0 1 
2 1 0 1 2 
2 2 1 2 2 
2 1 2 1 2 
1 2 2 2 1
'''
# N = int(input('Введите размер матрицы: '))
# for row in range(N):
#     for col in range(N):
#         if col == row or col == (N-1) - row:
#             print(1, end=' ')
#         elif col < row or col > (N-1) - row:
#             print(2, end=' ')
#         # elif col < row:
#         #     print(2, end=' ')
#         else:
#             print(0, end=' ')
#     print()
# 8 ==========================================================================
'''Задача 8. Гипотеза Сиракуз
Проверьте гипотезу Сиракуз на диапазоне чисел. Она утверждает, что любое натуральное число сводится 
к единице в результате повторения следующих действий над самим числом и результатами этих действий:
•	Если число четное следует разделить его на 2.
•	Если нечетное, то умножить его на 3, прибавить 1 и разделить на 2.
Если гипотеза Сиракуз верна, то программа рано или поздно завершится и зацикливания не произойдет, 
т.к. все числа будут сведены к единице.
Проверьте каждое число в диапазоне, вводимом пользователем. Обеспечьте контроль ввода
Пример 1:
Введите начало диапазона: 5
Введите конец диапазона: 8
->  5 8 4 2 1 
->  6 3 5 8 4 2 1 
->  7 11 17 26 13 20 10 5 8 4 2 1 
->  8 4 2 1 
Пример 2:
Введите начало диапазон: 10
Введите конец диапазона: 8
Неверный диапазон! Первое число больше второго! Введите заново!
'''
# start = int(input('Введите начало диапазона: '))
# stop = int(input('Введите конец диапазона: '))
# while stop < start:
#     print('Неверный диапазон! Первое число больше второго! Введите заново!')
#     start = int(input('Введите начало диапазона: '))
#     stop = int(input('Введите конец диапазона: '))
# for num in range(start, stop + 1, 1):
#     print('->', num, end=' ')
#     while num != 1:
#         if num % 2 == 0:
#             num = num // 2
#         else:
#             num = (num * 3 + 1) // 2
#         print(num, end=' ')
#     print()
# 9 ==========================================================================
'''Задача 9. Сумма факториалов
Напишите программу, которая запрашивает у пользователя число N и находит сумму факториалов 
1! + 2! + 3! +... + N! 
'''
# N = int(input('Введите число N: '))
# summ = 0
# factorial = 1
# for num in range(1, N + 1):
#     factorial *= num
#     summ += factorial
# print('Сумма факториалов: ', summ)
# 10 ==========================================================================
'''Задача 10. Наибольшая сумма цифр
Вводится N чисел. Среди натуральных чисел, которые были введены, найдите наибольшее по сумме цифр. 
Выведите на экран это число и сумму его цифр.
'''
# print('=' * 50)
# maxx = 0
# M = int(input('Введите количество чисел: '))

# for num in range(M):
#     summ = 0
#     N = int(input('Введите натуральное число: '))
#     number = N
#     while (number % 10) > 0:
#         summ += number % 10
#         number //= 10
#     if summ > maxx:
#         maxx_Num = N
#         maxx = summ
# print('Наибольшее по сумме цифр число: ', maxx_Num, '\nСумма его цифр равна: ', maxx)
# print('=' * 50)
# 11 ==========================================================================
'''Задача 11. Совершенные числа
Найдите все совершенные числа до 10000. Совершенное число - это такое число, которое равно сумме 
всех своих делителей, кроме себя самого. Например, число 6 является совершенным, т.к. кроме себя 
самого делится на числа 1, 2 и 3, которые в сумме дают 6.
'''
# print('=' * 50)
# for num in range(1, 10000+1):
#     summ = 0
#     for dev in range(1, num):
#         if num % dev == 0 and num != dev:
#             summ += dev
#     if summ == num:
#         print(f'Число {num} - | совершенное | :)')
#     # else:
#     #     print(f'Число {num} - НЕ совершенное  :(')
# print('=' * 50)
# 12 ==========================================================================
'''Задача 12. Автограф разрабочика
Напишите программу, которая печатает на экране ваше имя в прямоугольной рамке. Для вертикальных 
линий используйте символ вертикального штриха “|”, а для горизонтальных - дефис “-”.
Введите Ваше имя: Антон
|-----|
|Антон|
|-----|
'''
# print('=' * 50)
# name = input('Введите Ваше имя: ')
# countName = 0
# for quant in name:
#     countName += 1
# print('|' + '-'* countName + '|')
# print('|' + name + '|')
# print('|' + '-'* countName + '|')
# print('=' * 50)
# 13 ==========================================================================
'''Задача 13. Пирамидка
Напишите программу, которая выводит на экран равнобедренный треугольник (пирамидку), заполненный 
символами хэштега ‘#”. Пусть высота пирамиды вводится пользователем.
Подсказка: вспомните, как выводился колонтитул вида -----!!!!!!-----
Введите высоту пирамиды: 4
    #
   ###
  #####
 #######
'''
# height = int(input('Введите высоту пирамиды: '))    # height - высота

# # Вар 1
# for symNum in range(1, 2 * height, 2):
#     print(' ' * (((2 * height - 1) - symNum) // 2), '#' * symNum)

# # Вар 2
# for symNum in range(1, (1 + 2 * (height - 1)) + 1, 2):    # арифметическая прогрессия
#     print(' ' * (((1 + 2 * (height - 1)) - symNum)//2), '#' * symNum)

# # Вар 3
# quant = 1
# for space in range(height - 1, -1, -1):
#     print(' ' * space, '#' * quant)
#     quant += 2

# # Вар 4
# for num in range(1, 2*height, 2):
#     print(' ' * (((2 * height - 1) - num) // 2), end = '')
#     for symNum in range(num):
#         print('#', end = '')
#     print()

# # Вар 5
# height = int(input('Введите высоту пирамиды: '))    # height - высота
# width = 1 +  (height - 1) * 2   # width - ширина
# for row in range(height):
#     for col in range(width):
#         if col > row + (height - 1) or col < -row + (height - 1):
#             print(' ', end = '')
#         else:
#             print('#', end = '')
#     print()
# 14 ==========================================================================
'''Задача 14. Пирамидка 2
Напишите программу, которая получает на вход количество уровней пирамиды и выводит их на экран, 
заполняя нечетными числами вот так:
Введите кол-во уровней пирамиды: 5
------------1    
---------3    5    
------7    9    11    
---13    15    17    19    
21    23    25    27    29 
'''
# level = int(input('Введите кол-во уровней пирамиды: '))    # height - высота
# num = 1
# N = level - 1
# for row in range(level):
#     print((N-row) * '---', end = '')
#     for col in range(row + 1):
#         print(num, end = '    ')
#         num = num + 2
#     print()
# 15 ==========================================================================
'''Задача 15. Яма 
В одной компьютерной текстовой игре рисуются всяческие элементы ландшафта.
Напишите программу, которая получает на вход число N и выводит на экран числа в виде “ямы” вот так:
5
5........5
54......45
543....345
5432..2345
5432112345
'''
# N = int(input())
# countSym = 2*N - 2
# start = N
#
# for row in range(1, N+1):
#     for sym_left in range(row):
#         print(N - sym_left, end = '')
#     print('.' * countSym, end = '')
#     for sym_right in range(start, (N - 1), -1):
#         symbol = 2 * N - sym_right
#         print(symbol, end = '')
#     print()
#     start += 1
#     countSym -= 2
# 16 ==========================================================================
'''Задача 16. Треугольник Паскаля (необязательная)
Напишите программу, которая выводит на экран N первых строк треугольника Паскаля. N задаётся 
пользователем с клавиатуры. Треугольник Паскаля - это числа, расположенные в виде треугольника 
где по краям стоят единицы, а каждое число внутри треугольника равно сумме двух чисел, расположенных над ним.
Конечно же, решение задачи всегда можно подсмотреть в интернете. Постарайтесь решить задачу самостоятельно:
ведь в этом и состоит смысл обучения! 
Пример (N = 5):
Сколько уровней пирамиды паскаля отобразить? 5
    1 
   1 1 
  1 2 1 
 1 3 3 1 
1 4 6 4 1 
'''
# Вар 1
# lines = int(input('Сколько уровней пирамиды паскаля отобразить? '))
#
# for n in range(lines):
#     Cnk = 1
#     space = lines - n - 1
#     print('-' * space, Cnk, end = '-')
#     for k in range(1, n + 1):
#         Cnk = Cnk * (n - k + 1) // k
#         print(Cnk, end = '-')
#     print()

# Вар 2
# lines = int(input('Сколько уровней пирамиды паскаля отобразить? '))
# string = ''
# symbol = '1'
# space = ' '
#
# for n in range(lines):
#     print(' ' * (lines - 1 - n), end = '')
#     if n <= 1:
#         string += symbol + space
#     else:
#         summ = 0
#         nextt_line = ''
#         current_sym = ''
#         for sym in string:
#             if sym != ' ':
#                 current_sym += sym
#             else:
#                 summ = summ + int(current_sym)
#                 nextt_line += str(summ) + space
#                 summ = int(current_sym)
#                 current_sym = ''
#         nextt_line += str(summ)
#         string = nextt_line + space
#     print(string)

# Вар 3
# Вариант 3 корректно выводит треугольник Паскаля только до 6 строчки, т.к. этот
# алгоритм дальше не справляется

# lines = int(input('Сколько уровней пирамиды паскаля отобразить? '))
# lines = lines - 2
# flag = 0
#
# symbols = 11
# if lines >= 5:
#     print('=' * 65)
#     print('Этот алгоритм выводит треугольник Паскаля только до 6 строчки!')
#     print('=' * 65)
# elif lines == -1:
#     print(1)
# elif lines == 0:
#     print('', 1)
#     print(1, 1)
# else:
#     for n in range(lines):
#         if flag == 0:
#             print(' ' * (lines - n), 1)
#             print(' ' * (lines - 1 - n), 1, 1)
#             flag = 1
#         print(' ' * (lines - 1 - n), end = '')
#         count = symbols
#         coef = 1
#         while count != 0:
#             count //= 10
#             coef *= 10
#         summ = 0
#         nextt_sym = 0
#         while symbols != 0:
#             last_sym = symbols % 10
#             summ = summ + last_sym
#             print(summ, end=' ')
#             nextt_sym = nextt_sym + summ * coef
#             coef //= 10
#             summ = last_sym
#             symbols = symbols // 10
#         nextt_sym += last_sym
#         symbols = nextt_sym
#         print(last_sym)
