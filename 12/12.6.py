# Home Work
# 1 ==========================================================================
'''Задача 1. Сумма чисел
Напишите функцию summa_n, которая принимает одно целое положительное число N и
выводит сумму всех чисел от 1 до N включительно.
Пример работы программы:
Введите число: 5
Я знаю, что сумма чисел от 1 до 5 равна 15
'''
# def summa_n(N):
#     summ = 0
#     for num in range(1, N+1):
#         summ += num
#     print('Я знаю, что сумма чисел от 1 до', N, 'равна', summ)

# N = int(input('Введите число: '))
# summa_n(N)
# 2 ==========================================================================
'''Задача 2. Функция в функции
Евгений проходит специальный тест по программированию. У него всё шло хорошо, пока 
он не наткнулся на тему «Функции». Задание звучит так:
Основная ветка программы, не считая заголовков функций, состоит из одной строки кода. 
Это вызов функции test(). В ней запрашивается на ввод целое число. Если оно положительное, 
то вызывается функция positive(), тело которой содержит команду вывода на экран слова 
«Положительное». Если число отрицательное, то вызывается функция negative(), её тело 
содержит выражение вывода на экран слова «Отрицательное».
Помогите Евгению и реализуйте такую программу.
'''
# def test():
#     n = int(input('Введите целое число: '))
#     if n > 0:
#         positive()
#     elif n < 0:
#         negative()
    
# def positive():
#     print('Положительное.')

# def negative():
#     print('Отрицательное')

# test()
# 3 ==========================================================================
'''Задача 3. Площади
Муниципалитет хочет построить необычный парк в одном из районов города. Власти 
остановились на трёх вариантах: изображение на карте в виде круга, прямоугольника 
или треугольника. Однако им также нужно понять, какую площадь будет занимать тот 
или иной вариант при разных значениях.
Напишите программу, которая в зависимости от выбора пользователя вычисляет площадь 
круга, прямоугольника или треугольника. Для вычисления площади каждой фигуры должна 
быть написана отдельная функция.
Площадь круга:
S = pi * R^2
Площадь прямоугольника:
S = a * b
Площадь треугольника:
S = (1/2) * a * b * sin(alpha)
'''
# print('=' * 50)
# import math

# def circle(R):
#     S = math.pi * R ** 2
#     print('Площадь круга равна: ', S)

# def rectangle(a, b):
#     S = a * b
#     print('Площадь прямоугольника равна: ', S)

# def triangle(a, b, alpha):
#     S = (1 / 2) * a * b * math.sin(math.radians(alpha))
#     print('Площадь треугольника равна: ', S)
    
# print('Полщать какой фигуры будем вычислять?')
# choice = int(input('1 - круга; 2 - прямоугольника; 3 - треугольника: '))
# if choice == 1:
#     R = float(input('Введите радиус круга: '))
#     circle(R)
# elif choice == 2:
#     a = float(input('Введите длину прямоугольника: '))
#     b = float(input('Введите ширину прямоугольника: '))
#     rectangle(a, b)
# elif choice == 3:
#     a = float(input('Введите длину боковой стороны треугольника: '))
#     b = float(input('Введите длину основания треугольника: '))
#     alpha = float(input('Введите угол между основанием и боковой стороной (в градусах): '))
#     triangle(a, b, alpha)
# else:
#     print('Ошибка ввода! Введите 1, 2 или 3.')
# print('=' * 50)
# 4 ==========================================================================
'''Задача 4. Апгрейд калькулятора
Степан, как и большая часть населения планеты, для расчёта суммы и разности чисел 
использует калькулятор. Однако в работе ему нужно делать не только обычные действия 
вроде сложения и вычитания, а делать что-то вручную он уже устал. Поэтому Степан решил 
немного расширить функционал своего калькулятора.
Напишите программу, запрашивающую у пользователя число и действие, которое нужно с ним 
сделать: вывести сумму его цифр, максимальную или минимальную цифру. Каждое действие 
оформите в виде отдельной функции, а основную программу зациклите.
'''
# print('=' * 50)
# def sumNum(number):
#     # summ = 0
#     # while True:
#     #     sym = number % 10
#     #     summ += sym
#     #     if sym == 0:
#     #         break
#     #     number //= 10                                                                   
#     # print('Сумма цифр числа: ', summ)
#     summ = 0
#     for sym in number:
#         summ += int(sym)
#     print('Сумма цифр числа: ', summ)

# def minNum(number):
#     min_num = int(number) % 10
#     for sym in number:
#         if int(sym) < min_num:
#             min_num = int(sym)
#     print('Минимальная цифра в числе: ', min_num)

# def maxNum(number):
#     max_num = 0
#     for sym in number:
#         if int(sym) > max_num:
#             max_num = int(sym)
#     print('Максимальная цифра в числе: ', max_num)
# while True:
#     number = input('Введите число: ')
#     print('Доступные над числом действия:\n1. Вывести сумму цифр числа.\n2. Вывести минимальную цифру числа.\n3. Вывести максимальную цифру числа.')
#     choice = int(input('Ваш выбор: '))
#     if choice == 1:
#         sumNum(number)
#     elif choice == 2:
#         minNum(number)
#     elif choice == 3:
#         maxNum(number)
#     else:
#         print('Ошибка выбора!')
#     print('=' * 50)
# 5 ==========================================================================
'''Задача 5. Число наоборот
Вводится последовательность чисел, которая оканчивается нулём. Реализуйте функцию, 
которая принимает в качестве аргумента каждое число, переворачивает его и выводит на экран.
Пример:
Введите число: 1234
Число наоборот: 4321

Введите число: 1000
Число наоборот: 0001

Введите число: 0
Программа завершена!

Дополнительно: добейтесь такого вывода чисел, в начале которых идут нули.

Введите число: 1230
Число наоборот: 321

Кстати, нули, которые мы убрали, называются ведущими.
'''
# def reverse_number(number):
#     num_rev = ''
#     while number != 0:
#         num = number % 10
#         if num != 0:
#             num_rev += str(num)
#         number = number // 10
#     print('Число наоборот:', num_rev)

# while True:
#     number = int(input('Введите число: ')) 
#     if number == 0:
#         print('Программа завершена!')
#         break
#     else:
#         reverse_number(number)
# 6 ==========================================================================
'''Задача 6. Текстовый редактор
Мы продолжаем разрабатывать новый текстовый редактор, и в этот раз нам поручили написать 
для него код, который считает количество любой буквы и любой цифры в тексте (а не только 
буквы Ы, как раньше). 
Напишите функцию count_letters, которая принимает на вход текст и подсчитывает, какое в 
нём количество цифр K и букв N. Функция должна вывести на экран информацию о найденных 
буквах и цифрах в определённом формате.
Пример:
Введите текст: 100 лет в обед
Какую цифру ищем? 0
Какую букву ищем? л

Количество цифр 0: 2
Количество букв л: 1
'''
# def count_letters(text):
#     k = 0
#     n = 0
#     let_num = 0
#     num_numbers = 0
#     number = input('Какую цифру ищем? ')
#     letter = input('Какую букву ищем? ')
#     for sym in text:
#         flag = False
#         if sym != ' ':
#             for num in range(0, 10):
#                 if sym == str(num):
#                     flag = True
#                     k += 1
#                     if sym == number:
#                         num_numbers += 1
#                     break
#             if flag == False:
#                 n += 1
#                 if sym == letter:
#                     let_num += 1
#     print('Кол-во букв: ', n)
#     print('Кол-во цифр: ', k)
#     print('Количество букв', letter + ':', let_num)
#     print('Количество цифр', number + ':', num_numbers)

# text = input('Введите текст: ')
# count_letters(text)
# 7 ==========================================================================
'''Задача 7. Вторая цифра
Дано положительное действительное число X. Напишите функцию, которая выводит его 
вторую цифру после десятичной точки.
'''
# def second_number(X):
#     num = int((X - int(X))*100 % 10)
#     print('Вторая цифра числа', X,'после десятичной точки', num)

# X = float(input('Введите положительное действительное число: '))
# second_number(X)
# 8 ==========================================================================
'''Задача 8. Монетка
Практиканту дали задание найти старую металлическую монетку по заданным координатам. 
Металлоискатель сканирует местность вокруг пользователя, и при обнаружении/отсутствии 
металла прибор отображает на экране соответствующее сообщение. 
Даны два действительных числа x и y. Напишите функцию, которая проверяет, принадлежит 
ли точка с координатами (x, y) заштрихованному квадрату (включая его границу). Если точка 
принадлежит квадрату, выведите сообщение «Монетка где-то рядом», в противном случае 
выведите сообщение «Монетки в области нет». На рисунке сетка проведена с шагом 1.
'''
# def verification(x, y):     # verification - проверка
#     if -1 <= x <= 1 and -1 <= y <= 1:
#         print('Монетка где-то рядом!')
#     else:
#         print('Монетки в области нет.')

# x = float(input('Введите координату X: '))
# y = float(input('Введите координату Y: '))
# verification(x, y)
# 9 ==========================================================================
'''Задача 9. Опять?
Вы снова встретились со своим старым другом, который был безмерно благодарен вам за 
то, что вы помогли ему сдать задачу тому преподавателю. Вот только друг всё равно 
выглядел довольно грустным. Когда вы спросили, в чём дело, друг взорвался эмоциями 
и рассказал, что теперь препод попросил написать функцию нахождения минимального 
числа без использования условного оператора и циклов. Конечно же, вы решили снова 
помочь бедняге. Напишите для него такую программу.
'''
# def greatest_number(a, b):
#     max_num = (abs(a - b) + a + b) / 2
#     print('Наибольшее число: ', max_num)

# a = float(input('Введите первое число: '))
# b = float(input('Введите второе число: '))
# greatest_number(a, b)
# 10 ==========================================================================
'''Задача 10. НОД
Напишите функцию, вычисляющую наибольший общий делитель двух чисел.
'''
def gcd(a, b):      # greatest common divisor - Наибольший общий делитель (НОД)
    if a < b:
        minn = a
    else:
        minn = b
    for devisor in range(1, minn + 1):
        if a % devisor == 0 and b % devisor == 0:
            dev = devisor
    print('Наибольший общий делитель (НОД) равен: ', dev)

a = int(input('Введите первое число: '))
b = int(input('Введите второе число: '))
gcd(a, b)
# 11 ==========================================================================
'''Задача 11. Копейки
На одном складе нашли старые кассовые аппараты, в которых, как выяснилось, до сих пор 
остались лежать копейки разного достоинства. Даже однокопеечные есть! Все найденные 
копейки собрали в кучу и закинули в специальное устройство, которое сканирует все 
монеты и в результате выдаёт, сколько всё это будет в рублях.
Напишите функцию, которая будет считать количество мелких монеток достоинством 
в 1, 5, 10 и 50 копеек. Функция должна выводить общую сумму.
Пример:
Монет по 1 копейке: 3
Монет по 5 копеек: 6
Монет по 10 копеек: 7
Монет по 50 копеек: 2

Всего у нас 2.03 рубля
'''
# def scanner(penny_one, penny_five, penny_ten, penny_fifty):
#     summ = (1 * penny_one + 5 * penny_five + 10 * penny_ten + 50 * penny_fifty) / 100
#     print('Всего у нас', summ,'рубля.')

# penny_one = int(input('Монет по 1 копейке: '))
# penny_five = int(input('Монет по 5 копеек: '))
# penny_ten = int(input('Монет по 10 копеек: '))
# penny_fifty = int(input('Монет по 50 копеек: '))
# scanner(penny_one, penny_five, penny_ten, penny_fifty)
# 12 ==========================================================================
'''Задача 12. Недоделка
Вы пришли на работу в контору по разработке игр, целевая аудитория которых — дети и 
их родители. У прошлого программиста было задание сделать две игры в одном приложении, 
чтобы пользователь мог выбирать одну из них. Однако программист, на место которого вы 
пришли, перед увольнением не успел сделать эту задачу и оставил только небольшой шаблон 
проекта. Используя этот шаблон, реализуйте игры «Камень, ножницы, бумага» и «Угадай число».
Правила игры «Камень, ножницы, бумага»: программа запрашивает у пользователя строку и выводит,
победил он или проиграл. Камень бьёт ножницы, ножницы режут бумагу, бумага кроет камень.
Правила игры «Угадай число»: программа запрашивает у пользователя число до тех пор, пока 
он его не отгадает.

def rock_paper_scissors():
    #Здесь будет игра "Камень, ножницы, бумага"

def guess_the_number():
    #Здесь будет игра "Угадай число"

def mainMenu():
    #Здесь главное меню игры

mainMenu():
'''
# def mainMenu():     # Главное меню
#     print('Доступные игры:')
#     print('1. Камень, ножницы, бумага')
#     print('2. Угадай число')
#     choice = int(input('Выберете игру: '))
#     if choice == 1:
#         rock_paper_scissors()
#     elif choice == 2:
#         guess_the_number()
#     else:
#         print('Ошибка ввода: нужно ввести 1 или 2.')
#         mainMenu()

# def rock_paper_scissors():  # Игра "Камень, ножницы, бумага"
#     choice = input('Введите камень, ножницы или бумага: ')
#     victory = 'бумага'
#     print('Компьютер поставил -', victory,'\nВы поставили -', choice)
#     if choice == 'ножницы':
#         print('Поздравляем, Вы победили!')
#     elif choice == 'камень':
#         print('Вы проиграли!')
#     else:
#         print('Ничья! Попробуйте еще разок.')
#         rock_paper_scissors()

# def guess_the_number():     # Игра "Угадай число"
#     victory = 5
#     choice = int(input('Введите число: '))
#     if choice == victory:
#         print('Поздравляем, Вы угадали!')
#     else:
#         print('Не угадали! Попробуйте еще разок.')
#         guess_the_number()

# mainMenu()
# 13 ==========================================================================
'''Задача 13 (по желанию)
Напишите игру — текстовый квест. Игрок находится в квартире, его задача — покинуть её. 
Игрок свободно перемещается по квартире, пока не покинет её. В квартире есть три комнаты 
(спальня, кухня, ванна) и коридор. В ванну можно попасть из коридора и спальни. В спальню 
можно попасть из ванны и коридора. На кухню можно попасть только из коридора. Коридор 
связан со всеми комнатами, но в нём дополнительно есть дверь наружу. На кухне открыто окно. 
Если игрок пытается выбраться через него, то разбивается и проигрывает.
Пример:
Вы в спальне. Куда идём?
1 — в ванну
2 — в коридор
2
Вы в коридоре. Куда идём?
1 — в спальню
2 — в ванну
3 — на кухню
4 — в дверь
2
Вы в ванне. Куда идём?
1 — в коридор
2 — в спальню
2
Вы в спальне...
'''
# print('=' * 50)
# def mainMenu():
#     print('~' * 50)
#     print('Вас приветствует создатель этой игры, ildario')
#     print('Это текстовый квест')
#     print('Игрок находится в квартире, его задача — покинуть её.')
#     print('~' * 50)

# def bedroom():      # bedroom - спальня
#     print('-' * 50)
#     print('Вы в спальне. Куда идём?')
#     print('1 — в ванну')
#     print('2 — в коридор')
#     choice = int(input('Ваш выбор: '))
#     print()
#     if choice == 1:
#         bathroom()
#     elif choice == 2:
#         corridor()
#     else:
#         print('Ошибка ввода: нужно ввести 1 или 2.')
#         bedroom()

# def bathroom():     # bathroom - ванная комната
#     print('-' * 50)
#     print('Вы в ванне. Куда идём?')
#     print('1 — в коридор')
#     print('2 — в спальню')
#     choice = int(input('Ваш выбор: '))
#     print()
#     if choice == 1:
#         corridor()
#     elif choice == 2:
#         bedroom()
#     else:
#         print('Ошибка ввода: нужно ввести 1 или 2.')
#         bathroom()

# def corridor():     # corridor - корридор
#     print('-' * 50)
#     print('Вы в корридоре. Куда идём?')
#     print('1 — в спальню')
#     print('2 — в ванну')
#     print('3 — на кухню')
#     print('4 — в дверь')
#     choice = int(input('Ваш выбор: '))
#     print()
#     if choice == 1:
#         bedroom()
#     elif choice == 2:
#         bathroom()
#     elif choice == 3:
#         kitchen()
#     elif choice == 4:
#         print('Поздравлямба, Вы нашли выход и покинули квартиру!')
#         print('Игра окончена...')
#         print('-' * 50)
#     else:
#         print('Ошибка ввода: нужно ввести 1, 2, 3 или 4.')
#         corridor()

# def kitchen():      # kitchen - кухня
#     print('-' * 50)
#     print('Вы на кухне. Куда идём?')
#     print('1 — в окно')
#     print('2 — в коридор')
#     choice = int(input('Ваш выбор: '))
#     print()
#     if choice == 1:
#         print('Увы, Вы разбились :( и поэтому проиграли!')
#         print('Игра окончена...')
#         print('-' * 50)
#     elif choice == 2:
#         corridor()
#     else:
#         print('Ошибка ввода: нужно ввести 1 или 2.')
#         kitchen()

# mainMenu()
# bedroom()
# print('=' * 50)
# 14 ==========================================================================
'''Задача 14 (по желанию). Зачёт
Чтобы получить зачёт по программированию, преподаватель дал Андрею следующее задание: 
нужно написать функцию, которая принимает в качестве аргумента число, и пока оно больше 
либо равно трём, выводит его целую часть от деления на 2. Затем берёт это же число, и 
пока оно больше пяти, уменьшает его на единицу и тоже выводит на экран. Все числа при 
этом идут друг за другом в одну строчку без пробелов. Обрадовавшись такому лёгкому 
заданию, Андрей хотел его быстренько выполнить, однако внезапно в условии задачи он 
заметил небольшую деталь: циклами пользоваться нельзя. Андрей понял, что не справится, 
и попросил вас помочь ему написать такую программу.

Пример:
Введите число: 8
Ответ: 84273635242

Пример 2:
Введите число: 3
Ответ: 3

Пример 3:
Введите число: 4
Ответ: 42
'''
# def func_2(num):
#     if num >= 5:
#         num -= 1
#         print(int(num), end = '')
#         number = int(num / 2)
#         print(number, end = '')
#         if num >= 5:
#             func_2(num)
        
# def func_1(num):
#     if num >= 3:
#         num = int(num / 2)
#         print(num, end = '')
#         if num >= 3:
#             func_1(num)

# num = float(input('Введите число: '))
# # number = num
# print(int(num), end = '')
# func_1(num)
# func_2(num)
